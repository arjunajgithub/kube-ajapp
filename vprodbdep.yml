apiVersion: apps/v1
kind: Deployment
metadata:
  name: vprodb
  labels:
    app: vprodb
spec:
  selector:
    matchLabels:
      app: vprodb
  replicas: 1
  template:
    metadata:
      labels:
        app: vrodb
    spec:
      containers:
        - name: vprodb
          image: vprofile/vprofiledb:v1
          volumeMounts:
            - mountPath: /var/lib/mysql	# if any folder inside (normally last+found folder will be created)is there inside then it will show error like not empty to initiate mysql database
              name: vpro-db-data		# same as created below volume block
          ports:
            - name: vprodb-port
              containerPort: 3306
          env:
            - name: MYSQL_BD_PASSWORD
              valueFrom:
                mySecretKeyRef:
                  name: app-secret      # secret name given in secret.yml
                  key: db-pass          # value from the db-pass will be fetched for secrets and assigned to name MYSQL_BD_PASSWORD
      nodeSelector:
        zone: ap-south-1a                # make sure volume should also be in the same zone
      volumes:
        - name: vpro-db-data            # same as volume name mentioned above in container block
          awsElasticBlockStore:
            volumeId: vol-xxxxxxxx      # create the EBL volume & add tags ->key=k8sCluster, value=viprokube.groofy.in and get the id and add here
            fsType: ext4                # format with ext4
      initContainer:                    # will initiate lightweight busybox container and run the args to remove the lost+found folder and this container completed and exited then the main container will start
        - name: busybox
          image: busybox:latest
          args: ["rm", "/var/lib/mysql/lost+found"]
          volumeMounts:
            - name: vpro-db-data
              mountPath: /var/lib/mysql